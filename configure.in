AC_INIT(src/cairo.h)

dnl ===========================================================================

# Package version number, (as distinct from shared library version)
CAIRO_VERSION=0.1.20

# libtool shared library version

# Increment if the interface has additions, changes, removals.
LT_CURRENT=1

# Increment any time the source changes; set to
# 0 if you increment CURRENT
LT_REVISION=0

# Increment if any interfaces have been added; set to 0
# if any interfaces have been removed. removal has
# precedence over adding, so set to 0 if both happened.
LT_AGE=0

VERSION_INFO="$LT_CURRENT:$LT_REVISION:$LT_AGE"
AC_SUBST(VERSION_INFO)

dnl ===========================================================================

AM_INIT_AUTOMAKE(cairo, $CAIRO_VERSION)
AM_CONFIG_HEADER(config.h)

AM_MAINTAINER_MODE

AC_PROG_CC
AC_PROG_CPP
AM_PROG_LIBTOOL
AC_STDC_HEADERS

dnl ===========================================================================

AC_ARG_ENABLE(xlib,
  [  --disable-xlib          Disable cairo's Xlib backend],
  [use_xlib=$enableval], [use_xlib=yes])

if test "x$use_xlib" != "xyes"; then
  XLIB_SURFACE_FEATURE=CAIRO_HAS_NO_XLIB_SURFACE
  AM_CONDITIONAL(CAIRO_HAS_XLIB_SURFACE, false)
else
  XLIB_SURFACE_FEATURE=CAIRO_HAS_XLIB_SURFACE
  dnl Check for Xrender header files if the Xrender package is not installed:
  PKG_CHECK_MODULES(XRENDER, xrender >= 0.6,[
    XRENDER_REQUIRES=xrender],[
      AC_CHECK_HEADER(X11/extensions/Xrender.h,[
      AC_PATH_XTRA
      XRENDER_LIBS="$X_LIBS -lXrender -lXext -lX11 $X_EXTRA_LIBS"],[
	AC_MSG_ERROR(Xrender not found perhaps use --disable-xlib?)])])
  AM_CONDITIONAL(CAIRO_HAS_XLIB_SURFACE, true)
fi

AC_SUBST(XLIB_SURFACE_FEATURE)
AC_SUBST(XRENDER_CFLAGS)
AC_SUBST(XRENDER_LIBS)
AC_SUBST(XRENDER_REQUIRES)

dnl ===========================================================================

AC_ARG_ENABLE(xcb,
  [  --disable-xcb           Disable cairo's XCB backend],
  [use_xcb=$enableval], [use_xcb=no])

if test "x$use_xcb" != "xyes"; then
  XCB_SURFACE_FEATURE=CAIRO_HAS_NO_XCB_SURFACE
  AM_CONDITIONAL(CAIRO_HAS_XCB_SURFACE, false)
else
  XCB_SURFACE_FEATURE=CAIRO_HAS_XCB_SURFACE
  PKG_CHECK_MODULES(XCB, xcb)
  AM_CONDITIONAL(CAIRO_HAS_XCB_SURFACE, true)
fi

AC_SUBST(XCB_SURFACE_FEATURE)
AC_SUBST(XCB_CFLAGS)
AC_SUBST(XCB_LIBS)

dnl ===========================================================================

AC_ARG_ENABLE(ps,
  [  --disable-ps            Disable cairo's PostScript backend],
  [use_ps=$enableval], [use_ps=yes])

if test "x$use_ps" != "xyes"; then
  PS_SURFACE_FEATURE=CAIRO_HAS_NO_PS_SURFACE
  AM_CONDITIONAL(CAIRO_HAS_PS_SURFACE, false)
else
  PS_SURFACE_FEATURE=CAIRO_HAS_PS_SURFACE
  PS_LIBS=-lz
  AM_CONDITIONAL(CAIRO_HAS_PS_SURFACE, true)
fi

AC_SUBST(PS_SURFACE_FEATURE)
AC_SUBST(PS_LIBS)

dnl ===========================================================================

AC_ARG_ENABLE(png,
  [  --enable-png            Enable cairo's PNG backend],
  [use_png=$enableval], [use_png=no])

if test "x$use_png" != "xyes"; then
  PNG_SURFACE_FEATURE=CAIRO_HAS_NO_PNG_SURFACE
  AM_CONDITIONAL(CAIRO_HAS_PNG_SURFACE, false)
else
  PNG_SURFACE_FEATURE=CAIRO_HAS_PNG_SURFACE
  PKG_CHECK_MODULES(PNG, libpng12,
  [PNG_REQUIRES=libpng12],[
    PKG_CHECK_MODULES(PNG, libpng10,
    [PNG_REQUIRES=libpng10])])
  AM_CONDITIONAL(CAIRO_HAS_PNG_SURFACE, true)
fi

AC_SUBST(PNG_SURFACE_FEATURE)
AC_SUBST(PNG_CFLAGS)
AC_SUBST(PNG_LIBS)
AC_SUBST(PNG_REQUIRES)

dnl ===========================================================================

PKG_CHECK_MODULES(FONTCONFIG, fontconfig)
PKG_CHECK_MODULES(CAIRO, libpixman >= 0.1.0)

# Test for freetype2 separate from pkg-config since at least up to
# 2003-06-07, there was no freetype2.pc in the release.
#
# Freetype versions come in three forms:
#   release (such as 2.1.5)
#   libtool (such as 9.4.3) (returned by freetype-config)
#   platform-specific/soname (such as 6.3.4)
# and they recommend you never use the platform-specific version
# (see docs/VERSION.DLL in freetype2 sources)
#
# Set these as appropriate:

# release number - for information only
FREETYPE_MIN_RELEASE=2.1.0
# libtool-specific version - this is what is checked
FREETYPE_MIN_VERSION=8.0.2

if test -z "$FREETYPE_CONFIG"; then
  AC_PATH_PROG(FREETYPE_CONFIG, freetype-config, no)
fi
if test "$FREETYPE_CONFIG" = "no" ; then
  AC_MSG_ERROR(No freetype-config script found in path or FREETYPE_CONFIG)
fi

AC_MSG_CHECKING(freetype2 libtool version)

FREETYPE_VERSION=`$FREETYPE_CONFIG --version`

VERSION_DEC=`echo $FREETYPE_VERSION | awk -F. '{printf("%d\n", 10000*$1 + 100*$2 + $3)};'`
MIN_VERSION_DEC=`echo $FREETYPE_MIN_VERSION | awk -F. '{printf("%d\n", 10000*$1 + 100*$2 + $3)};'`
if test $VERSION_DEC -lt $MIN_VERSION_DEC; then
  AC_MSG_ERROR($FREETYPE_VERSION - version $FREETYPE_MIN_VERSION from release $FREETYPE_MIN_RELEASE required)
fi
AC_MSG_RESULT($FREETYPE_VERSION - OK)

FREETYPE_CFLAGS=`$FREETYPE_CONFIG --cflags`
FREETYPE_LIBS=`$FREETYPE_CONFIG --libs`
AC_SUBST(FREETYPE_CFLAGS)
AC_SUBST(FREETYPE_LIBS)


CAIRO_CFLAGS="$CAIRO_CFLAGS $FREETYPE_CFLAGS"
CAIRO_LIBS="$CAIRO_LIBS $FREETYPE_LIBS"

AC_SUBST(CAIRO_CFLAGS)
AC_SUBST(CAIRO_LIBS)

dnl ===========================================================================

AC_OUTPUT([
cairo.pc
Makefile
src/Makefile
src/cairo-features.h
])
